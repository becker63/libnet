import ../../autogenerated/generated_nftnl
import ../../raii/expresions
import ./all

# ---------------------------------------------------------------------------
# nftnl "payload" expression attribute accessors
# ---------------------------------------------------------------------------

# --- ids --------------------------------------------------------
const
  idPayloadDreg* = uint16(NFTNL_EXPR_PAYLOAD_DREG)
  idPayloadBase* = uint16(NFTNL_EXPR_PAYLOAD_BASE)
  idPayloadOffset* = uint16(NFTNL_EXPR_PAYLOAD_OFFSET)
  idPayloadLen* = uint16(NFTNL_EXPR_PAYLOAD_LEN)

# --- high-level typed bridges -----------------------------------

proc getPayloadDreg*(e: PayloadExpr): uint32 =
  getU32(toRaw(e), idPayloadDreg)

proc setPayloadDreg*(e: PayloadExpr, v: uint32) =
  setU32(toRaw(e), idPayloadDreg, v)

proc getPayloadBase*(e: PayloadExpr): uint32 =
  getU32(toRaw(e), idPayloadBase)

proc setPayloadBase*(e: PayloadExpr, v: uint32) =
  setU32(toRaw(e), idPayloadBase, v)

proc getPayloadOffset*(e: PayloadExpr): uint32 =
  getU32(toRaw(e), idPayloadOffset)

proc setPayloadOffset*(e: PayloadExpr, v: uint32) =
  setU32(toRaw(e), idPayloadOffset, v)

proc getPayloadLen*(e: PayloadExpr): uint32 =
  getU32(toRaw(e), idPayloadLen)

proc setPayloadLen*(e: PayloadExpr, v: uint32) =
  setU32(toRaw(e), idPayloadLen, v)

proc base*(e: PayloadExpr): uint32 =
  getPayloadBase(e)

proc `base=`*(e: PayloadExpr, v: uint32) =
  setPayloadBase(e, v)

proc offset*(e: PayloadExpr): uint32 =
  getPayloadOffset(e)

proc `offset=`*(e: PayloadExpr, v: uint32) =
  setPayloadOffset(e, v)

proc len*(e: PayloadExpr): uint32 =
  getPayloadLen(e)

proc `len=`*(e: PayloadExpr, v: uint32) =
  setPayloadLen(e, v)

proc dreg*(e: PayloadExpr): uint32 =
  getPayloadDreg(e)

proc `dreg=`*(e: PayloadExpr, v: uint32) =
  setPayloadDreg(e, v)
