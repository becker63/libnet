import ../../autogenerated/generated_nftnl
import ../../raii/expresions

# --- Getters ---------------------------------------------------------------
proc getU32*(p: ptr struct_nftnl_expr, attr: uint16): uint32 =
  nftnl_expr_get_u32(p, attr)

proc getStr*(p: ptr struct_nftnl_expr, attr: uint16): string =
  $cast[cstring](nftnl_expr_get_str(p, attr))

proc getBlob*(p: ptr struct_nftnl_expr, attr: uint16): seq[uint8] =
  var size: uint32
  let data = nftnl_expr_get(p, attr, addr size)
  if data.isNil or size == 0:
    return @[]
  result = newSeq[uint8](int(size))
  copyMem(addr result[0], data, size)

# --- Setters ---------------------------------------------------------------
proc setU32*(p: ptr struct_nftnl_expr, attr: uint16, v: uint32) =
  nftnl_expr_set_u32(p, attr, v)

proc setStr*(p: ptr struct_nftnl_expr, attr: uint16, v: string) =
  discard nftnl_expr_set_str(p, attr, cast[ptr uint8](v.cstring))

proc setBlob*(p: ptr struct_nftnl_expr, attr: uint16, v: seq[uint8]) =
  if v.len > 0:
    discard nftnl_expr_set(p, attr, unsafeAddr v[0], uint32(v.len))
  else:
    discard nftnl_expr_set(p, attr, nil, 0)
