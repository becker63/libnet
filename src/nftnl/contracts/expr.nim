import ../autogenerated/generated_nftnl

# cmp
const
  CmpBlobAttrs* = {int(NFTNL_EXPR_CMP_DATA)}
  CmpUint32Attrs* = {int(NFTNL_EXPR_CMP_SREG), int(NFTNL_EXPR_CMP_OP)}

# payload
const
  PayloadStringAttrs* = {int(NFTNL_EXPR_PAYLOAD_BASE)}
  PayloadUint32Attrs* = {int(NFTNL_EXPR_PAYLOAD_OFFSET), int(NFTNL_EXPR_PAYLOAD_LEN)}

# meta
const MetaUint32Attrs* = {int(NFTNL_EXPR_META_KEY), int(NFTNL_EXPR_META_DREG)}

# Todo split this up/parameterize on exprKind
template expectedType*(exprKind: static[string], attr: static[int]): untyped =
  when exprKind == "cmp":
    when attr in CmpBlobAttrs:
      seq[uint8]
    elif attr in CmpUint32Attrs:
      uint32
    else:
      {.error: "Unsupported cmp expression attribute: " & $attr.}
  elif exprKind == "payload":
    when attr in PayloadStringAttrs:
      string
    elif attr in PayloadUint32Attrs:
      uint32
    else:
      {.error: "Unsupported payload expression attribute: " & $attr.}
  elif exprKind == "meta":
    when attr in MetaUint32Attrs:
      uint32
    else:
      {.error: "Unsupported meta expression attribute: " & $attr.}
  else:
    {.error: "Unsupported expr kind for this contract: " & exprKind.}
