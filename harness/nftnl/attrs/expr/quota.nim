# ===========================================================================
# ðŸ§© nftnl "quota" expression attribute accessors
# ===========================================================================

import ../../autogenerated/generated_nftnl
import ../../raii/expresions
import ./all # getU32, setU32

# ---------------------------------------------------------------------------
# Attribute IDs (mirroring libnftnl quota_attr_policy)
# ---------------------------------------------------------------------------
const
  idQuotaBytes* = uint16(NFTNL_EXPR_QUOTA_BYTES)
  idQuotaFlags* = uint16(NFTNL_EXPR_QUOTA_FLAGS)
  idQuotaConsumed* = uint16(NFTNL_EXPR_QUOTA_CONSUMED)

# ---------------------------------------------------------------------------
# Ergonomic field-like accessors
# ---------------------------------------------------------------------------

proc bytes*(e: QuotaExpr): uint64 =
  ## Total quota bytes allowed.
  getU64(toRaw(e), idQuotaBytes)

proc `bytes=`*(e: QuotaExpr, v: uint64) =
  setU64(toRaw(e), idQuotaBytes, v)

proc flags*(e: QuotaExpr): uint32 =
  ## Flags for quota behavior (e.g., NFT_QUOTA_F_INV, NFT_QUOTA_F_OVER).
  getU32(toRaw(e), idQuotaFlags)

proc `flags=`*(e: QuotaExpr, v: uint32) =
  setU32(toRaw(e), idQuotaFlags, v)

proc consumed*(e: QuotaExpr): uint64 =
  ## How many bytes have been consumed so far.
  getU64(toRaw(e), idQuotaConsumed)

proc `consumed=`*(e: QuotaExpr, v: uint64) =
  setU64(toRaw(e), idQuotaConsumed, v)
