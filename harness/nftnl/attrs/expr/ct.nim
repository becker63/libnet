# ===========================================================================
# ðŸ§© nftnl "ct" (connection tracking) expression attribute accessors
# ===========================================================================

import ../../autogenerated/generated_nftnl
import ../../raii/expresions
import ./all # getU32, setU32

# ---------------------------------------------------------------------------
# Attribute IDs (mirroring libnftnl ct_attr_policy)
# ---------------------------------------------------------------------------
const
  idCtKey* = uint16(NFTNL_EXPR_CT_KEY)
  idCtDreg* = uint16(NFTNL_EXPR_CT_DREG)
  idCtDir* = uint16(NFTNL_EXPR_CT_DIR) # optional, direction selector

# ---------------------------------------------------------------------------
# Ergonomic field-like accessors
# ---------------------------------------------------------------------------

proc key*(e: CtExpr): uint32 =
  ## Which conntrack field (NFT_CT_STATE, NFT_CT_MARK, NFT_CT_ZONE, etc.)
  getU32(toRaw(e), idCtKey)

proc `key=`*(e: CtExpr, v: uint32) =
  setU32(toRaw(e), idCtKey, v)

proc dreg*(e: CtExpr): uint32 =
  ## Destination register to store CT field value
  getU32(toRaw(e), idCtDreg)

proc `dreg=`*(e: CtExpr, v: uint32) =
  setU32(toRaw(e), idCtDreg, v)

proc dir*(e: CtExpr): uint32 =
  ## Direction (ORIG = 0, REPLY = 1)
  getU32(toRaw(e), idCtDir)

proc `dir=`*(e: CtExpr, v: uint32) =
  setU32(toRaw(e), idCtDir, v)
